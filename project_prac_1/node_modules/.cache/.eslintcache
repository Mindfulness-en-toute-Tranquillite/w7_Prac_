[{"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/index.js":"1","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/App.js":"2","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/redux/config/configStore.js":"3","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/shared/Router.jsx":"4","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/CardList.jsx":"5","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/Edit.jsx":"6","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/redux/modules/cardsSlice.jsx":"7","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/Home.jsx":"8"},{"size":318,"mtime":1679114728739,"results":"9","hashOfConfig":"10"},{"size":125,"mtime":1679116200493,"results":"11","hashOfConfig":"10"},{"size":198,"mtime":1679132958934,"results":"12","hashOfConfig":"10"},{"size":522,"mtime":1679150158865,"results":"13","hashOfConfig":"10"},{"size":2003,"mtime":1679162361635,"results":"14","hashOfConfig":"10"},{"size":2894,"mtime":1679162382806,"results":"15","hashOfConfig":"10"},{"size":1437,"mtime":1679159448736,"results":"16","hashOfConfig":"10"},{"size":1415,"mtime":1679163454136,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tbiive",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/index.js",[],[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/App.js",[],[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/redux/config/configStore.js",[],[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/shared/Router.jsx",[],[],[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/CardList.jsx",["46"],[],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { __getCardsThunk } from '../redux/modules/cardsSlice';\n\n// card 클릭시 Detail page로 가도록 기능구현 (games/:gameId)(Dynamic Route with useParam) \n// @@gameID가 정확히 뭔지 확인@@\n// 배경사진등록(submit page에서 등록할 수 있도록)\n\nfunction CardList() {\n    // const [cards, setCards] = useState([]);\n    const navigate = useNavigate();\n\n    const dispatch = useDispatch()\n    const {cards, error} = useSelector((state) => state.cardsSlice)\n    console.log(\"cards => \", cards )\n    useEffect(() => {\n        dispatch(__getCardsThunk())\n    }, [dispatch])\n    console.log(\"dispatch get ->\", dispatch)\n    \n    return (\n    <>\n        <div>\n        {/* 카드리스트 여기서는 axios get으로 카드리스트(지금은dbjson)가져와서 거기다 맵으로 div에 뿌려준다 */}\n        </div>\n{/* card 하나하나 및 카드 클릭시 Detail page로 이동*/}\n        <div>\n            {\n                cards.map((card) => {\n                    return (\n                        <StCardList onClick={(id) => {\n                            navigate(`/games/:gameId${id}`);\n                        }}\n                        key={card.id}>\n                            {card.title} <br />\n                            {card.optionA} vs {card.optionB}\n                        </StCardList>\n                    )\n                })\n            }\n{/* 게임 등록하기 버튼 */}\n        </div>\n        <button\n        onClick={() => {\n            navigate(\"/game/submit\");\n        }}\n        >게임 등록하기\n        </button>\n\n    </>\n\n    \n    )\n}\nexport default CardList\n\nconst StCardList = styled.div`\n    width: 200px;\n    height: 100px;\n    background-color: green;\n    margin: 10px;\n    &:focus-within {\n    box-shadow: 0 0 0 1px #292727; }\n    cursor: pointer;\n`",[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/Edit.jsx",["47"],[],"import React, { useState } from 'react'\nimport { useDispatch, } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components'\nimport { __addCardsThunk } from '../redux/modules/cardsSlice';\n\n//  등록하면 cardlist에 card 추가 되도록.\n\nfunction Edit() {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [card, setCard] = useState({\n        tilte: '',\n        optionA: '',\n        optionB: '',\n    })\n    console.log(\"card =>\", card)\n\n    // const [title, setTitle] = useState(\"\");\n    // const [optionA, setOptionA] = useState(\"\");\n    // const [optionB, setOptionB] = useState(\"\");\n\n    // title 변경 감지하는 함수\n    const handleTitleChange = (e) => {\n        setCard({...card, title: e.target.value})\n    }\n    //  gameA 변경 감지하는 함수\n    const handleGameAchange = (e) => {\n        setCard({...card, optionA: e.target.value})\n    }\n    //  gameB 변경 감지하는 함수\n    const handleGameBchange = (e) => {\n        setCard({...card, optionB: e.target.value})\n    }\n    \n    //추가 함수\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        dispatch(__addCardsThunk(card))\n        setCard({title:'', optionA:'',optionB: ''})\n    }\n    \n\n    return (\n    <form>\n        <div>\n            나만의 밸런스 게임을 등록해주세요!\n            <StInputWrapper onSubmit={onSubmitHandler}>\n                <label />\n                제목 <input \n                type=\"text\" placeholder='8글자 내로 제목을 지어주세요.' maxLength=\"10\" minLength=\"1\"\n                value={card.title}\n                onChange={handleTitleChange}\n                />\n                <label/>optionA\n                <input \n                type=\"text\" placeholder='A의견을 적어주세요' minLength=\"1\"\n                value={card.optionA}\n                onChange={handleGameAchange}\n                />\n                <label/>optionB\n                <input \n                type=\"text\" placeholder='B의견을 적어주세요'minLength=\"1\"\n                value={card.optionB}\n                onChange={handleGameBchange}\n                />\n            </StInputWrapper>\n            <div>\n                <button\n                onClick={() =>{\n                    dispatch(__addCardsThunk(card))\n                    setCard({ title: '', optionA: '', optionB: '' })\n                }\n                }\n                >\n                등록\n                </button>&nbsp;\n                <button\n                onClick={() => {\n                    navigate(\"/games\");\n                }}\n                >취소</button>\n            </div>\n\n        </div>\n    </form>\n    )\n}\n\nexport default Edit\nconst StFormWrapper = styled.form`\n    \n`\nconst StInputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 14pt;\n    gap: 5pt;\n`","/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/redux/modules/cardsSlice.jsx",["48"],[],"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/Home.jsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":16,"column":19,"nodeType":"51","messageId":"52","endLine":16,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":91,"column":7,"nodeType":"51","messageId":"52","endLine":91,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":60,"column":14,"nodeType":"56","messageId":"57","endLine":60,"endColumn":16},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'StFormWrapper' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]