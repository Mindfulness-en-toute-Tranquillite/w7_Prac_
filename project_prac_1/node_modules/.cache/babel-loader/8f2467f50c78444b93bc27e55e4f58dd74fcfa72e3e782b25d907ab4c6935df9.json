{"ast":null,"code":"var _jsxFileName = \"/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/CardList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { __getCardsThunk } from '../redux/modules/cardsSlice';\n\n// card 클릭시 Detail page로 가도록 기능구현 (games/:gameId)(Dynamic Route with useParam) \n// @@gameID가 정확히 뭔지 확인@@\n// 배경사진등록(submit page에서 등록할 수 있도록)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CardList() {\n  _s();\n  // const [cards, setCards] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    cards,\n    error\n  } = useSelector(state => state.cardsSlice);\n  console.log(\"cards => \", cards);\n  useEffect(() => {\n    dispatch(__getCardsThunk());\n  }, [dispatch]);\n  console.log(\"dispatch get ->\", dispatch);\n\n  // 조회함수\n  // const fetchCards = async () => {\n  //     const { data } = await axios.get('http://localhost:4000/cards');\n  //     setCards(data)\n  // };\n\n  // 랜더링 되자마자 바로 리스트 조회함수 불러오기(by useEffect).\n  // useEffect(()=>{\n  //     fetchCards()\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(StCardList, {\n          onClick: id => {\n            navigate(`/games/:gameId${id}`);\n          },\n          children: [card.title, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 42\n          }, this), card.optionA, \" vs \", card.optionB]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        navigate(\"/game/submit\");\n      },\n      children: \"\\uAC8C\\uC784 \\uB4F1\\uB85D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CardList, \"8lUyV8vgm5kVbHhhRVVgtLZpAaE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = CardList;\nexport default CardList;\nconst StCardList = styled.div`\n    width: 200px;\n    height: 100px;\n    background-color: green;\n    margin: 10px;\n    &:focus-within {\n    box-shadow: 0 0 0 1px #292727; }\n    cursor: pointer;\n`;\n_c2 = StCardList;\nvar _c, _c2;\n$RefreshReg$(_c, \"CardList\");\n$RefreshReg$(_c2, \"StCardList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useNavigate","styled","__getCardsThunk","jsxDEV","_jsxDEV","Fragment","_Fragment","CardList","_s","navigate","dispatch","cards","error","state","cardsSlice","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","StCardList","onClick","id","title","optionA","optionB","_c","div","_c2","$RefreshReg$"],"sources":["/Users/yunjaehyeok/Developer/react/week-7/project_prac_1/src/pages/CardList.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { __getCardsThunk } from '../redux/modules/cardsSlice';\n\n// card 클릭시 Detail page로 가도록 기능구현 (games/:gameId)(Dynamic Route with useParam) \n// @@gameID가 정확히 뭔지 확인@@\n// 배경사진등록(submit page에서 등록할 수 있도록)\n\nfunction CardList() {\n    // const [cards, setCards] = useState([]);\n    const navigate = useNavigate();\n\n    const dispatch = useDispatch()\n    const {cards, error} = useSelector((state) => state.cardsSlice)\n    console.log(\"cards => \", cards )\n    useEffect(() => {\n        dispatch(__getCardsThunk())\n    }, [dispatch])\n    console.log(\"dispatch get ->\", dispatch)\n\n    \n    \n    // 조회함수\n    // const fetchCards = async () => {\n    //     const { data } = await axios.get('http://localhost:4000/cards');\n    //     setCards(data)\n    // };\n\n    // 랜더링 되자마자 바로 리스트 조회함수 불러오기(by useEffect).\n    // useEffect(()=>{\n    //     fetchCards()\n    // }, []);\n\n    \n\n    return (\n    <>\n        <div>\n        {/* 카드리스트 여기서는 axios get으로 카드리스트(지금은dbjson)가져와서 거기다 맵으로 div에 뿌려준다 */}\n        </div>\n{/* card 하나하나 및 카드 클릭시 Detail page로 이동*/}\n        <div>\n            {\n                cards.map((card) => {\n                    return (\n                        <StCardList onClick={(id) => {\n                            navigate(`/games/:gameId${id}`);\n                        }}\n                        key={card.id}>\n                            {card.title} <br />\n                            {card.optionA} vs {card.optionB}\n                        </StCardList>\n                    )\n                })\n            }\n{/* 게임 등록하기 버튼 */}\n        </div>\n        <button\n        onClick={() => {\n            navigate(\"/game/submit\");\n        }}\n        >게임 등록하기\n        </button>\n\n    </>\n\n    \n    )\n}\nexport default CardList\n\nconst StCardList = styled.div`\n    width: 200px;\n    height: 100px;\n    background-color: green;\n    margin: 10px;\n    &:focus-within {\n    box-shadow: 0 0 0 1px #292727; }\n    cursor: pointer;\n`"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,eAAe,QAAQ,6BAA6B;;AAE7D;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAMU,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM;IAACa,KAAK;IAAEC;EAAK,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,KAAK,CAAE;EAChCd,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACR,eAAe,EAAE,CAAC;EAC/B,CAAC,EAAE,CAACQ,QAAQ,CAAC,CAAC;EACdK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEN,QAAQ,CAAC;;EAIxC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAIA,oBACAN,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEM,eAENjB,OAAA;MAAAa,QAAA,EAEQN,KAAK,CAACW,GAAG,CAAEC,IAAI,IAAK;QAChB,oBACInB,OAAA,CAACoB,UAAU;UAACC,OAAO,EAAGC,EAAE,IAAK;YACzBjB,QAAQ,CAAE,iBAAgBiB,EAAG,EAAC,CAAC;UACnC,CAAE;UAAAT,QAAA,GAEGM,IAAI,CAACI,KAAK,EAAC,GAAC,eAAAvB,OAAA;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,EAClBE,IAAI,CAACK,OAAO,EAAC,MAAI,EAACL,IAAI,CAACM,OAAO;QAAA,GAF9BN,IAAI,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGC;MAErB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGJ,eACNjB,OAAA;MACAqB,OAAO,EAAEA,CAAA,KAAM;QACXhB,QAAQ,CAAC,cAAc,CAAC;MAC5B,CAAE;MAAAQ,QAAA,EACD;IACD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAEV;AAIP;AAACb,EAAA,CA5DQD,QAAQ;EAAA,QAEIP,WAAW,EAEXF,WAAW,EACLC,WAAW;AAAA;AAAA+B,EAAA,GAL7BvB,QAAQ;AA6DjB,eAAeA,QAAQ;AAEvB,MAAMiB,UAAU,GAAGvB,MAAM,CAAC8B,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GARKR,UAAU;AAAA,IAAAM,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}